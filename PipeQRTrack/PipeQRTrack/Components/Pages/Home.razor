@page "/"
@inject ISnackbar Snackbar
@inject BasicService BasicService
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject DataService DataService

<PageTitle>Home</PageTitle>


@if (workOrderDetails == null)
{
    <MudProgressCircular Color="Color.Primary" Indeterminate="true" />

}
else
{




        <MudDataGrid T="PipeDetailComplete" MultiSelection="true" Hover="true" SortMode="SortMode.Single" Items="@workOrderDetails" Filterable="true">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Records</MudText>
                <MudSpacer />

            </ToolBarContent>
            <Columns>
                <SelectColumn T="PipeDetailComplete" />


     
                <PropertyColumn Property="x => x.LotNumber" />
                <PropertyColumn Property="x => x.JointNumber" />
                <PropertyColumn Property="x => x.DateTime" />
                <PropertyColumn Property="x => x.JobNumber" />
                <PropertyColumn Property="x => x.HeatNumber" />
                <PropertyColumn Property="x => x.Status" />
                <PropertyColumn Property="x => x.Val" />



            </Columns>
            <PagerContent>
                <MudDataGridPager T="PipeDetailComplete" />
            </PagerContent>
        </MudDataGrid>

}

@code {
    List<PipeDetailComplete>? workOrderDetails = null;

    protected override async Task OnInitializedAsync()
    {


        workOrderDetails = await BasicService.GetAll<PipeDetailComplete>();

    }


 

}