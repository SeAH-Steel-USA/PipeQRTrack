@page "/"

@inject ISnackbar Snackbar
@inject BasicService BasicService
@rendermode InteractiveServer
@attribute [StreamRendering]

<PageTitle>Home</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small">
    <MudCard Elevation="3" Class="mt-6">
        <MudCardHeader>
            <MudText Typo="Typo.h5">Work Order Entry</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField @bind-Value="orderDetail.WorkOrder" Label="Work Order" Variant="Variant.Outlined" Margin="Margin.Dense" />
            <MudTextField @bind-Value="orderDetail.LotNumber" Label="Lot Number" Variant="Variant.Outlined" Margin="Margin.Dense" />
            <MudTextField @bind-Value="orderDetail.JointNumber" Label="Joint Number" Variant="Variant.Outlined" Margin="Margin.Dense" />
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="HandleSubmit">Submit</MudButton>
        </MudCardActions>
    </MudCard>
</MudContainer>

@code {
    List<WorkOrderDetail>? workOrderDetails = null;
    WorkOrderDetail orderDetail = new WorkOrderDetail
        {
            DateSubmitted = DateTime.Now
    };


    private async Task HandleSubmit()
    {
        try
        {
            bool result = await BasicService.SubmitEntity(orderDetail);

            if (result)
            {
                Snackbar.Add("Form submitted successfully!", Severity.Success);

          
            }
            else
            {
                Snackbar.Add("Form submission failed. Please try again.", Severity.Error);
            }
        }
        catch (Exception ex)
        {
            Snackbar.Add($"An error occurred: {ex.Message}", Severity.Error);
        }
    }


}